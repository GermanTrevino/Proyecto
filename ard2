long distancia;
long distanciaBase;
long tiempo;
int inactivo;
int tolerancia;
int frecuencia;
int SerialSpeed1;
int SerialSpeed2;
int SerialSpeed3;
int SerialSpeed4;
int SerialSpeed5;
int SerialSpeed6;
int SerialSpeed7;
long SerialTotal;
 void setup(){
        Serial.begin(9600);
        pinMode(2, OUTPUT);
        pinMode(9, OUTPUT); /*activación del pin 9 como salida: para el pulso ultrasónico*/
        pinMode(8, INPUT); /*activación del pin 8 como entrada: tiempo del rebote del ultrasonido*/
        inactivo=0;
        tolerancia=6;
        frecuencia=500;
        int i=0;
        
        while(i<10){
            digitalWrite(9,LOW); 
            delayMicroseconds(5);
            digitalWrite(9, HIGH); 
            delayMicroseconds(10);
            tiempo=pulseIn(8, HIGH); 
            distancia= int(0.017*tiempo);
            
            if(distancia<2000){
               Serial.println(distancia);
               distanciaBase+=distancia;
               i++; 
            }
            delay(500);
        }
        distanciaBase=distanciaBase/10;
 }

 void loop(){
        digitalWrite(9,LOW); /* Por cuestión de estabilización del sensor*/
        delayMicroseconds(5);
        digitalWrite(9, HIGH); /* envío del pulso ultrasónico*/
        delayMicroseconds(10);
        tiempo=pulseIn(8, HIGH); /* Función para medir la longitud del pulso entrante. Mide el tiempo que transcurrido entre el envío
        del pulso ultrasónico y cuando el sensor recibe el rebote, es decir: desde que el pin 12 empieza a recibir el rebote, HIGH, hasta que
        deja de hacerlo, LOW, la longitud del pulso entrante*/
        distancia= int(0.017*tiempo); /*fórmula para calcular la distancia obteniendo un valor entero*/
        /*Monitorización en centímetros por el monitor serial*/
        if(distancia<2000){
            if(distancia<=distanciaBase+15){
                Serial.println(1, DEC);  //Sentado
                inactivo=0;
            }else{
                Serial.println(0, DEC);   //Parado
                inactivo++;
            }
        }

        if (Serial.available() > 0){
                  SerialSpeed1 = Serial.read()- '0';                
                  SerialSpeed2 = Serial.read()- '0';                
                  SerialSpeed3 = Serial.read()- '0';
                  SerialSpeed4 = Serial.read()- '0';                
                  SerialSpeed5 = Serial.read()- '0';
                  SerialSpeed6 = Serial.read()- '0';                
                  SerialSpeed7 = Serial.read()- '0';                                          
                  SerialTotal = ((SerialSpeed7) + (SerialSpeed6*10) + (SerialSpeed5*100) + (SerialSpeed4*1000) + (SerialSpeed3*10000) + (SerialSpeed2*100000) + (SerialSpeed1*1000000));
                  if(SerialTotal<100000){
                    frecuencia=SerialTotal;
                  }else{
                    tolerancia=SerialTotal/50000;
                  }
            }
        
        if(inactivo>=tolerancia){
            tone(2, frecuencia, 250 );
        }else{
            noTone(2);
        }
          delay(500);
 }

